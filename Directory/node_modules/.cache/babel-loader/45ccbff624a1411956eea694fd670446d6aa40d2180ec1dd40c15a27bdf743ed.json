{"ast":null,"code":"var _jsxFileName = \"/home/nicod/DossierPartage/projets/map_hyvilo/src/components/Layout/Map.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport api from '../../api/contactAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  /* MapBox */\n  mapboxgl.accessToken = 'pk.eyJ1IjoieXZlc3RhbiIsImEiOiJjbGRwczllamkxNjg1M3F0NmpmeW1zMHhhIn0.LpkG5sF33tcYKwZ4cbuEwg';\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng, setLng] = useState(-70.9);\n  const [lat, setLat] = useState(42.35);\n  const [zoom, setZoom] = useState(9);\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const response = await api.get('./contact');\n        setItems(response.data);\n      } catch (err) {\n        console.log(err.response.message);\n        console.log(\"erreur request failed\");\n      }\n    };\n    fetchContacts();\n    if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v12',\n      center: [lng, lat],\n      zoom: zoom,\n      attributionControl: false\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-green-600 border-solid border-2  h-full w-3/4 float-left flex\",\n      style: {\n        maxHeight: 'calc(100vh - 65px)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapContainer,\n        className: \"w-[95%] h-[95%] m-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Map, \"8fYzGcpDs4kulyU3iFiORqWxynA=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useRef","useEffect","mapboxgl","api","Map","accessToken","mapContainer","map","lng","setLng","lat","setLat","zoom","setZoom","items","setItems","fetchContacts","response","get","data","err","console","log","message","current","container","style","center","attributionControl","maxHeight"],"sources":["/home/nicod/DossierPartage/projets/map_hyvilo/src/components/Layout/Map.js"],"sourcesContent":["import React from 'react'\nimport { useState, useRef, useEffect } from 'react'\nimport mapboxgl from 'mapbox-gl';\nimport api from '../../api/contactAPI'\n\nconst Map = () => {\n  \n\n/* MapBox */\n  mapboxgl.accessToken = 'pk.eyJ1IjoieXZlc3RhbiIsImEiOiJjbGRwczllamkxNjg1M3F0NmpmeW1zMHhhIn0.LpkG5sF33tcYKwZ4cbuEwg';\n\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng, setLng] = useState(-70.9);\n  const [lat, setLat] = useState(42.35);\n  const [zoom, setZoom] = useState(9);\n\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const response = await api.get('./contact');\n        setItems(response.data);\n      } catch(err) {\n        console.log(err.response.message);\n        console.log(\"erreur request failed\")\n      }\n    }\n    fetchContacts();\n\n\n    if (map.current) return; // initialize map only once\n      map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v12',\n      center: [lng, lat],\n      zoom: zoom,\n      attributionControl: false\n    });\n\n    \n    \n    \n    \n  });\n\n  \n\n\n  return (\n    <>\n    <div className='border-green-600 border-solid border-2 \n    h-full w-3/4 float-left flex' style={{ maxHeight: 'calc(100vh - 65px)'}} >\n      <div ref={mapContainer} className='w-[95%] h-[95%] m-auto'/>\n    </div>\n    </>\n  )\n}\n\nexport default Map\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACnD,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,GAAG,MAAM,sBAAsB;AAAA;AAAA;AAEtC,MAAMC,GAAG,GAAG,MAAM;EAAA;EAGlB;EACEF,QAAQ,CAACG,WAAW,GAAG,2FAA2F;EAElH,MAAMC,YAAY,GAAGN,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMO,GAAG,GAAGP,MAAM,CAAC,IAAI,CAAC;EACxB,MAAM,CAACQ,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,CAAC,IAAI,CAAC;EACrC,MAAM,CAACW,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACrC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEnC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtCE,SAAS,CAAC,MAAM;IACd,MAAMe,aAAa,GAAG,YAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAC,WAAW,CAAC;QAC3CH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAMC,GAAG,EAAE;QACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACH,QAAQ,CAACM,OAAO,CAAC;QACjCF,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACtC;IACF,CAAC;IACDN,aAAa,EAAE;IAGf,IAAIT,GAAG,CAACiB,OAAO,EAAE,OAAO,CAAC;IACvBjB,GAAG,CAACiB,OAAO,GAAG,IAAItB,QAAQ,CAACE,GAAG,CAAC;MAC/BqB,SAAS,EAAEnB,YAAY,CAACkB,OAAO;MAC/BE,KAAK,EAAE,oCAAoC;MAC3CC,MAAM,EAAE,CAACnB,GAAG,EAAEE,GAAG,CAAC;MAClBE,IAAI,EAAEA,IAAI;MACVgB,kBAAkB,EAAE;IACtB,CAAC,CAAC;EAMJ,CAAC,CAAC;EAKF,oBACE;IAAA,uBACA;MAAK,SAAS,EAAC,sEACc;MAAC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAoB,CAAE;MAAA,uBACtE;QAAK,GAAG,EAAEvB,YAAa;QAAC,SAAS,EAAC;MAAwB;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA;EACxD,iBACH;AAEP,CAAC;AAAA,GArDKF,GAAG;AAAA,KAAHA,GAAG;AAuDT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}