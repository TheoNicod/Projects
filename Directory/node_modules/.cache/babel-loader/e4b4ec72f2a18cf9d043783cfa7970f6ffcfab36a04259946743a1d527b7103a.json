{"ast":null,"code":"var _jsxFileName = \"/home/nicod/DossierPartage/projets/map_hyvilo/src/components/Layout/Map.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport ReactMapGL, { Marker } from 'mapbox-gl';\nimport api from '../../api/contactAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  /*\n    mapboxgl.accessToken = 'pk.eyJ1IjoieXZlc3RhbiIsImEiOiJjbGRwczllamkxNjg1M3F0NmpmeW1zMHhhIn0.LpkG5sF33tcYKwZ4cbuEwg';\n  \n    const mapContainer = useRef(null);\n    const map = useRef(null);\n    const [lng, setLng] = useState(-70.9);\n    const [lat, setLat] = useState(42.35);\n    const [zoom, setZoom] = useState(9);\n  \n    const [items, setItems] = useState([]);\n  \n    useEffect(() => {\n     \n      async function getPositions() {\n  \n        return new Promise((resolve, reject) => {\n          // Récupération des positions depuis la base de données\n          api.get(\"./contact\")\n            .then(positions => {\n              resolve(positions);\n            })\n            .catch(error => {\n              reject(error);\n            });\n        });\n      }\n  \n  \n    \n      if (map.current) return; // initialize map only once\n        map.current = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: 'mapbox://styles/mapbox/streets-v12',\n        center: [lng, lat],\n        zoom: zoom,\n        attributionControl: false\n      });\n      \n      const marker = new mapboxgl.Marker()\n              .setLngLat([-70, 42])\n              .addTo(map.current);\n              \n  \n      const initMarker = async () => {\n        try {\n          const pos = await getPositions();\n          pos.data.forEach(e => {\n            console.log(\"e =\",e.position)\n            if(e.position != undefined) {\n              \n              const marker = new mapboxgl.Marker()\n              .setLngLat([Number(e.position.long), Number(e.position.lat)])\n              .addTo(map.current);\n            }else{\n              console.log(\"not added\")\n            }\n          });\n        }catch(err) {\n          console.log(err)\n        }\n      }\n      initMarker();\n      \n    });\n  */\n\n  const [viewport, setViewport] = useState({\n    width: '100vw',\n    height: '100vh',\n    latitude: 21,\n    longitude: 42,\n    zoom: 5\n  });\n  return (\n    /*#__PURE__*/\n    /*\n    <>\n    <div className='border-green-600 border-solid border-2 \n    h-full w-3/4 float-left flex' style={{ maxHeight: 'calc(100vh - 65px)'}} >\n      <div ref={mapContainer} className='w-[95%] h-[95%] m-auto'\n        \n      />\n    </div>\n    </>\n    */\n    _jsxDEV(ReactMapGL, {\n      ...viewport,\n      mapStyle: \"mapbox://styles/mapbox/streets-v12\",\n      onViewPortChange: viewport => setViewport(viewport),\n      mapboxApiAccessToken: \"pk.eyJ1IjoieXZlc3RhbiIsImEiOiJjbGRwczllamkxNjg1M3F0NmpmeW1zMHhhIn0.LpkG5sF33tcYKwZ4cbuEwg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  );\n};\n_s(Map, \"FELmhQ+gVrbsOBwD8wYWloggMW4=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useRef","useEffect","mapboxgl","ReactMapGL","Marker","api","Map","viewport","setViewport","width","height","latitude","longitude","zoom"],"sources":["/home/nicod/DossierPartage/projets/map_hyvilo/src/components/Layout/Map.js"],"sourcesContent":["import React from 'react'\nimport { useState, useRef, useEffect } from 'react'\nimport mapboxgl from 'mapbox-gl';\nimport ReactMapGL, { Marker } from 'mapbox-gl';\nimport api from '../../api/contactAPI'\n\nconst Map = () => {\n  \n\n/*\n  mapboxgl.accessToken = 'pk.eyJ1IjoieXZlc3RhbiIsImEiOiJjbGRwczllamkxNjg1M3F0NmpmeW1zMHhhIn0.LpkG5sF33tcYKwZ4cbuEwg';\n\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng, setLng] = useState(-70.9);\n  const [lat, setLat] = useState(42.35);\n  const [zoom, setZoom] = useState(9);\n\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n   \n    async function getPositions() {\n\n      return new Promise((resolve, reject) => {\n        // Récupération des positions depuis la base de données\n        api.get(\"./contact\")\n          .then(positions => {\n            resolve(positions);\n          })\n          .catch(error => {\n            reject(error);\n          });\n      });\n    }\n\n\n  \n    if (map.current) return; // initialize map only once\n      map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v12',\n      center: [lng, lat],\n      zoom: zoom,\n      attributionControl: false\n    });\n    \n    const marker = new mapboxgl.Marker()\n            .setLngLat([-70, 42])\n            .addTo(map.current);\n            \n\n    const initMarker = async () => {\n      try {\n        const pos = await getPositions();\n        pos.data.forEach(e => {\n          console.log(\"e =\",e.position)\n          if(e.position != undefined) {\n            \n            const marker = new mapboxgl.Marker()\n            .setLngLat([Number(e.position.long), Number(e.position.lat)])\n            .addTo(map.current);\n          }else{\n            console.log(\"not added\")\n          }\n        });\n      }catch(err) {\n        console.log(err)\n      }\n    }\n    initMarker();\n    \n  });\n*/\n\n\n  const [viewport, setViewport] = useState({\n    width: '100vw',\n    height: '100vh',\n    latitude: 21,\n    longitude: 42,\n    zoom: 5,\n  });\n\n\n\n\n  return (\n    /*\n    <>\n    <div className='border-green-600 border-solid border-2 \n    h-full w-3/4 float-left flex' style={{ maxHeight: 'calc(100vh - 65px)'}} >\n      <div ref={mapContainer} className='w-[95%] h-[95%] m-auto'\n        \n      />\n    </div>\n    </>\n    */\n  \n      <ReactMapGL {...viewport}\n                  mapStyle='mapbox://styles/mapbox/streets-v12'\n                  onViewPortChange={(viewport) => setViewport(viewport)}\n                  mapboxApiAccessToken='pk.eyJ1IjoieXZlc3RhbiIsImEiOiJjbGRwczllamkxNjg1M3F0NmpmeW1zMHhhIn0.LpkG5sF33tcYKwZ4cbuEwg'\n      />\n    \n\n  )\n}\n\nexport default Map\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACnD,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,UAAU,IAAIC,MAAM,QAAQ,WAAW;AAC9C,OAAOC,GAAG,MAAM,sBAAsB;AAAA;AAEtC,MAAMC,GAAG,GAAG,MAAM;EAAA;EAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACvCU,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,OAAO;IACfC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,IAAI,EAAE;EACR,CAAC,CAAC;EAKF;IAAA;IACE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAEM,QAAC,UAAU;MAAA,GAAKN,QAAQ;MACZ,QAAQ,EAAC,oCAAoC;MAC7C,gBAAgB,EAAGA,QAAQ,IAAKC,WAAW,CAACD,QAAQ,CAAE;MACtD,oBAAoB,EAAC;IAA2F;MAAA;MAAA;MAAA;IAAA;EAC1H;AAIR,CAAC;AAAA,GArGKD,GAAG;AAAA,KAAHA,GAAG;AAuGT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}